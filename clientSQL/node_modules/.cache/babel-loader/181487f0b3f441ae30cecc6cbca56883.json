{"ast":null,"code":"import Response from \"../defultComponent/response.tsx\";\nimport axios from \"axios\";\nvar http = \"http://127.0.0.1:4000\";\nexport default class BaseService {\n  static async getAll(url) {\n    let res = await axios.get(http + url).then(response => {\n      const result = response.data;\n      console.log(result);\n      console.log(response);\n\n      if (result && response.status === 200) {\n        return new Response(true, result, \"Success\", \"\");\n      } else {\n        const msg = result.messageList && result.messageList.length > 0 ? result.messageList[0].text : \"Error\";\n        return new Response(false, null, \"Error\", msg);\n      }\n    }).catch(function (error) {\n      return new Response(false, null, \"Error\", error);\n    });\n    console.log(res);\n    return res;\n  }\n\n  static fetch(url) {\n    let res = axios.get(http + url).then(response => {\n      //console.log('response: ', response)\n      return response;\n    }).catch(function (error) {\n      return new Response(false, null, \"Error\", error);\n    });\n    return res;\n  }\n\n  static get(url, param) {\n    let res = axios.get(http + url + param).then(response => {\n      //console.log('response: ', response)\n      const result = response.data; //console.log('data: ', result);\n\n      if (result) {\n        //&& response.status === 200){\n        return new Response(true, result, \"Success\", \"\");\n      } else {\n        const msg = result.messageList && result.messageList.length > 0 ? result.messageList[0].text : \"Error\";\n        return new Response(false, null, \"Error\", msg);\n      }\n    }).catch(function (error) {\n      return new Response(false, null, \"Error\", error);\n    });\n    return res;\n  }\n\n  static delete(url, param) {\n    console.log(param);\n    let res = axios.delete(http + url + param.id).then(response => {\n      const result = response.data; //const result = response;\n\n      console.log(result);\n\n      if (response) {\n        //&& result.success){\n        return new Response(true, result, \"Success\", \"\");\n      } else {\n        const msg = result.messageList && result.messageList.length > 0 ? result.messageList[0].text : \"Error\";\n        return new Response(false, null, \"Error\", msg);\n      }\n    }).catch(function (error) {\n      return new Response(false, null, \"Error\", error);\n    });\n    return res;\n  }\n\n  static create(url, obj) {\n    console.log(obj);\n    let res = axios.post(http + url, obj).then(response => {\n      console.log(url);\n      console.log(obj);\n      const result = response.data;\n\n      if (result) {\n        //&& result.success){\n        return new Response(true, result, \"Success\", \"\");\n      } else {\n        const msg = result.messageList && result.messageList.length > 0 ? result.messageList[0].text : \"Error\";\n        return new Response(false, null, \"Error\", msg);\n      }\n    }).catch(function (error) {\n      return new Response(false, null, \"Error\", error);\n    });\n    return res;\n  }\n\n  static update(url, param, obj) {\n    let res = axios.put(http + url + param, obj).then(response => {\n      const result = response.data;\n      console.log(response);\n\n      if (result) {\n        //&& result.success){\n        return new Response(true, result, \"Success\", \"\");\n      } else {\n        const msg = result.messageList && result.messageList.length > 0 ? result.messageList[0].text : \"Error\";\n        return new Response(false, null, \"Error\", msg);\n      }\n    }).catch(function (error) {\n      return new Response(false, null, \"Error\", error);\n      ;\n    });\n    return res;\n  }\n\n  static put(url) {\n    let res = axios.put(http + url).then(response => {\n      console.log(url);\n      const result = response.data;\n\n      if (result) {\n        //&& result.success){\n        return new Response(true, result, \"Success\", \"\");\n      } else {\n        const msg = result.messageList && result.messageList.length > 0 ? result.messageList[0].text : \"Error\";\n        return new Response(false, null, \"Error\", msg);\n      }\n    }).catch(function (error) {\n      return new Response(false, null, \"Error\", error);\n    });\n    return res;\n  }\n\n}\nBaseService.baseURL = `${process.env.REACT_APP_BASE_URL}:${process.env.REACT_APP_SERVER_PORT}`;","map":{"version":3,"names":["Response","axios","http","BaseService","getAll","url","res","get","then","response","result","data","console","log","status","msg","messageList","length","text","catch","error","fetch","param","delete","id","create","obj","post","update","put","baseURL","process","env","REACT_APP_BASE_URL","REACT_APP_SERVER_PORT"],"sources":["/home/evyatar/resteron_project/client/src/service/base.service.tsx"],"sourcesContent":["import Response from \"../defultComponent/response.tsx\";\nimport axios from \"axios\";\n\nvar http = \"http://127.0.0.1:4000\"\n\nexport default class BaseService {\n    private static baseURL: string = `${process.env.REACT_APP_BASE_URL}:${process.env.REACT_APP_SERVER_PORT}`;\n\n\n    public static async getAll<T>(url: string): Promise<Response> {\n        let res = await axios.get<Array<T>>(http + url)\n            .then((response: any) => {\n                const result = response.data;\n                console.log(result);\n                console.log(response);\n                if (result && response.status === 200) {\n                    return new Response(true, result as Array<T>, \"Success\", \"\");\n                } else {\n                    const msg = (result.messageList && result.messageList.length > 0) ? result.messageList[0].text : \"Error\";\n                    return new Response(false, null, \"Error\", msg);\n                }\n\n            })\n            .catch(function (error) {\n                return new Response(false, null, \"Error\", error);\n            });\n        console.log(res);\n        return res;\n    }\n\n    public static fetch<T>(url: string): Promise<Response> {\n        let res = axios.get<T>(http + url)\n            .then((response: any) => {\n                //console.log('response: ', response)\n                return response;\n            })\n            .catch(function (error) {\n                return new Response(false, null, \"Error\", error);\n            });\n        return res;\n    }\n\n\n\n    public static get<T>(url: string, param: any): Promise<Response> {\n        let res = axios.get<T>(http + url + param)\n            .then((response: any) => {\n                //console.log('response: ', response)\n                const result = response.data;\n                //console.log('data: ', result);\n                if (result) {//&& response.status === 200){\n                    return new Response(true, result, \"Success\", \"\");\n                } else {\n                    const msg = (result.messageList && result.messageList.length > 0) ? result.messageList[0].text : \"Error\";\n                    return new Response(false, null, \"Error\", msg);\n                }\n            })\n            .catch(function (error) {\n                return new Response(false, null, \"Error\", error);\n            });\n        return res;\n    }\n    public static delete(url: string, param: any): Promise<Response> {\n        console.log(param);\n\n        let res = axios.delete(http + url + param.id)\n            .then(response => {\n                const result = response.data\n                //const result = response;\n                console.log(result)\n                if (response) {//&& result.success){\n                    return new Response(true, result, \"Success\", \"\");\n                } else {\n                    const msg = (result.messageList && result.messageList.length > 0) ? result.messageList[0].text : \"Error\";\n                    return new Response(false, null, \"Error\", msg);\n                }\n            })\n            .catch(function (error) {\n                return new Response(false, null, \"Error\", error);\n            });\n        return res;\n    }\n    public static create<T>(url: string, obj: T): Promise<Response> {\n        console.log(obj)\n        let res = axios.post(http + url, obj)\n            .then(response => {\n                console.log(url)\n                console.log(obj)\n                const result = response.data;\n                if (result) {//&& result.success){\n                    return new Response(true, result, \"Success\", \"\");\n                } else {\n                    const msg = (result.messageList && result.messageList.length > 0) ? result.messageList[0].text : \"Error\";\n                    return new Response(false, null, \"Error\", msg);\n                }\n            })\n            .catch(function (error) {\n                return new Response(false, null, \"Error\", error);\n            });\n        return res;\n    }\n    public static update<T>(url: string, param: any, obj: T): Promise<Response> {\n        let res = axios.put(http + url + param, obj)\n            .then(response => {\n                const result = response.data;\n                console.log(response)\n                if (result) {//&& result.success){\n                    return new Response(true, result, \"Success\", \"\");\n                } else {\n                    const msg = (result.messageList && result.messageList.length > 0) ? result.messageList[0].text : \"Error\";\n                    return new Response(false, null, \"Error\", msg);\n                }\n            })\n            .catch(function (error) {\n                return new Response(false, null, \"Error\", error);;\n            });\n        return res;\n    }\n    public static put<T>(url: string): Promise<Response> {\n        let res = axios.put(http + url)\n            .then(response => {\n                console.log(url)\n                const result = response.data;\n                if (result) {//&& result.success){\n                    return new Response(true, result, \"Success\", \"\");\n                } else {\n                    const msg = (result.messageList && result.messageList.length > 0) ? result.messageList[0].text : \"Error\";\n                    return new Response(false, null, \"Error\", msg);\n                }\n            })\n            .catch(function (error) {\n                return new Response(false, null, \"Error\", error);\n            });\n        return res;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}