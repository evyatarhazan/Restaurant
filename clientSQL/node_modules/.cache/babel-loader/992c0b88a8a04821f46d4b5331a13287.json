{"ast":null,"code":"import Response from \"../defultComponent/response.tsx\";\nimport axios from \"axios\";\nvar http = \"http://127.0.0.1:4001\";\nexport default class BaseService {\n  // public static async getAll<T>(url: string): Promise<Response> {\n  //     let res = await axios.get<Array<T>>(http + url)\n  //         .then((response: any) => {\n  //             const result = response.data;\n  //             console.log(result);\n  //             console.log(response);\n  //             if (result && response.status === 200) {\n  //                 return new Response(true, result as Array<T>, \"Success\", \"\");\n  //             } else {\n  //                 const msg = (result.messageList && result.messageList.length > 0) ? result.messageList[0].text : \"Error\";\n  //                 return new Response(false, null, \"Error\", msg);\n  //             }\n  //         })\n  //         .catch(function (error) {\n  //             return new Response(false, null, \"Error\", error);\n  //         });\n  //     console.log(res);\n  //     return res;\n  // }\n  static fetch(url) {\n    // console.log(\"aaaa\", http, \"dddd\", url)\n    let res = axios.get(http + url).then(response => {\n      // console.log('response: ', response)\n      return response;\n    }).catch(function (error) {\n      return new Response(false, null, \"Error\", error);\n    });\n    return res;\n  }\n\n  static get(url, param) {\n    let res = axios.get(http + url + param).then(response => {\n      // console.log('response: ', response)\n      const result = response.data; //console.log('data: ', result);\n\n      if (result) {\n        //&& response.status === 200){\n        return new Response(true, result, \"Success\", \"\");\n      } else {\n        const msg = result.messageList && result.messageList.length > 0 ? result.messageList[0].text : \"Error\";\n        return new Response(false, null, \"Error\", msg);\n      }\n    }).catch(function (error) {\n      return new Response(false, null, \"Error\", error);\n    });\n    return res;\n  }\n\n  static delete(url, param) {\n    console.log(param);\n    let res = axios.delete(http + url + param.id).then(response => {\n      const result = response.data; //const result = response;\n\n      console.log(result);\n\n      if (response) {\n        //&& result.success){\n        return new Response(true, result, \"Success\", \"\");\n      } else {\n        const msg = result.messageList && result.messageList.length > 0 ? result.messageList[0].text : \"Error\";\n        return new Response(false, null, \"Error\", msg);\n      }\n    }).catch(function (error) {\n      return new Response(false, null, \"Error\", error);\n    });\n    return res;\n  }\n\n  static create(url, obj) {\n    console.log(obj);\n    let res = axios.post(http + url, obj).then(response => {\n      console.log(url);\n      console.log(obj);\n      const result = response.data;\n\n      if (result) {\n        //&& result.success){\n        return new Response(true, result, \"Success\", \"\");\n      } else {\n        const msg = result.messageList && result.messageList.length > 0 ? result.messageList[0].text : \"Error\";\n        return new Response(false, null, \"Error\", msg);\n      }\n    }).catch(function (error) {\n      return new Response(false, null, \"Error\", error);\n    });\n    return res;\n  }\n\n  static update(url, param, obj) {\n    let res = axios.put(http + url + param, obj).then(response => {\n      const result = response.data;\n      console.log(response);\n\n      if (result) {\n        //&& result.success){\n        return new Response(true, result, \"Success\", \"\");\n      } else {\n        const msg = result.messageList && result.messageList.length > 0 ? result.messageList[0].text : \"Error\";\n        return new Response(false, null, \"Error\", msg);\n      }\n    }).catch(function (error) {\n      return new Response(false, null, \"Error\", error);\n      ;\n    });\n    return res;\n  }\n\n  static put(url) {\n    let res = axios.put(http + url).then(response => {\n      console.log(\"url\", url);\n      const result = response.data;\n      console.log(\"result\", result);\n\n      if (result) {\n        //&& result.success){\n        return new Response(true, result, \"Success\", \"\");\n      } else {\n        const msg = result.messageList && result.messageList.length > 0 ? result.messageList[0].text : \"Error\";\n        return new Response(false, null, \"Error\", msg);\n      }\n    }).catch(function (error) {\n      return new Response(false, null, \"Error\", error);\n    });\n    return res;\n  }\n\n}\nBaseService.baseURL = `${process.env.REACT_APP_BASE_URL}:${process.env.REACT_APP_SERVER_PORT}`;","map":{"version":3,"names":["Response","axios","http","BaseService","fetch","url","res","get","then","response","catch","error","param","result","data","msg","messageList","length","text","delete","console","log","id","create","obj","post","update","put","baseURL","process","env","REACT_APP_BASE_URL","REACT_APP_SERVER_PORT"],"sources":["/home/evyatar/resteronProjectSQL/clientSQL/src/service/base.service.tsx"],"sourcesContent":["import Response from \"../defultComponent/response.tsx\";\nimport axios from \"axios\";\n\nvar http = \"http://127.0.0.1:4001\"\n\nexport default class BaseService {\n    private static baseURL: string = `${process.env.REACT_APP_BASE_URL}:${process.env.REACT_APP_SERVER_PORT}`;\n\n\n    // public static async getAll<T>(url: string): Promise<Response> {\n    //     let res = await axios.get<Array<T>>(http + url)\n    //         .then((response: any) => {\n    //             const result = response.data;\n    //             console.log(result);\n    //             console.log(response);\n    //             if (result && response.status === 200) {\n    //                 return new Response(true, result as Array<T>, \"Success\", \"\");\n    //             } else {\n    //                 const msg = (result.messageList && result.messageList.length > 0) ? result.messageList[0].text : \"Error\";\n    //                 return new Response(false, null, \"Error\", msg);\n    //             }\n\n    //         })\n    //         .catch(function (error) {\n    //             return new Response(false, null, \"Error\", error);\n    //         });\n    //     console.log(res);\n    //     return res;\n    // }\n\n    public static fetch<T>(url: string): Promise<Response> {\n        // console.log(\"aaaa\", http, \"dddd\", url)\n        let res = axios.get<T>(http + url)\n            .then((response: any) => {\n                // console.log('response: ', response)\n                return response;\n            })\n            .catch(function (error) {\n                return new Response(false, null, \"Error\", error);\n            });\n        return res;\n    }\n\n\n\n    public static get<T>(url: string, param: any): Promise<Response> {\n        let res = axios.get<T>(http + url + param)\n            .then((response: any) => {\n                // console.log('response: ', response)\n                const result = response.data;\n                //console.log('data: ', result);\n                if (result) {//&& response.status === 200){\n                    return new Response(true, result, \"Success\", \"\");\n                } else {\n                    const msg = (result.messageList && result.messageList.length > 0) ? result.messageList[0].text : \"Error\";\n                    return new Response(false, null, \"Error\", msg);\n                }\n            })\n            .catch(function (error) {\n                return new Response(false, null, \"Error\", error);\n            });\n        return res;\n    }\n\n    public static delete(url: string, param: any): Promise<Response> {\n        console.log(param);\n\n        let res = axios.delete(http + url + param.id)\n            .then(response => {\n                const result = response.data\n                //const result = response;\n                console.log(result)\n                if (response) {//&& result.success){\n                    return new Response(true, result, \"Success\", \"\");\n                } else {\n                    const msg = (result.messageList && result.messageList.length > 0) ? result.messageList[0].text : \"Error\";\n                    return new Response(false, null, \"Error\", msg);\n                }\n            })\n            .catch(function (error) {\n                return new Response(false, null, \"Error\", error);\n            });\n        return res;\n    }\n    public static create<T>(url: string, obj: T): Promise<Response> {\n        console.log(obj)\n        let res = axios.post(http + url, obj)\n            .then(response => {\n                console.log(url)\n                console.log(obj)\n                const result = response.data;\n                if (result) {//&& result.success){\n                    return new Response(true, result, \"Success\", \"\");\n                } else {\n                    const msg = (result.messageList && result.messageList.length > 0) ? result.messageList[0].text : \"Error\";\n                    return new Response(false, null, \"Error\", msg);\n                }\n            })\n            .catch(function (error) {\n                return new Response(false, null, \"Error\", error);\n            });\n        return res;\n    }\n    public static update<T>(url: string, param: any, obj: T): Promise<Response> {\n        let res = axios.put(http + url + param, obj)\n            .then(response => {\n                const result = response.data;\n                console.log(response)\n                if (result) {//&& result.success){\n                    return new Response(true, result, \"Success\", \"\");\n                } else {\n                    const msg = (result.messageList && result.messageList.length > 0) ? result.messageList[0].text : \"Error\";\n                    return new Response(false, null, \"Error\", msg);\n                }\n            })\n            .catch(function (error) {\n                return new Response(false, null, \"Error\", error);;\n            });\n        return res;\n    }\n    public static put(url: string): Promise<Response> {\n        let res = axios.put(http + url)\n            .then(response => {\n                console.log(\"url\", url)\n                const result = response.data;\n                console.log(\"result\", result)\n                if (result) {//&& result.success){\n                    return new Response(true, result, \"Success\", \"\");\n                } else {\n                    const msg = (result.messageList && result.messageList.length > 0) ? result.messageList[0].text : \"Error\";\n                    return new Response(false, null, \"Error\", msg);\n                }\n            })\n            .catch(function (error) {\n                return new Response(false, null, \"Error\", error);\n            });\n        return res;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}